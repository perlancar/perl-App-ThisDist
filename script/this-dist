#!perl

# AUTHORITY
# DATE
# DIST
# VERSION

use 5.010001;
use strict;
use warnings;
use Log::ger::Screen;

use App::ThisDist 'this_dist';
use Cwd;
use Getopt::Long;

my ($quiet, $extract_version);
Getopt::Long::Configure("bundling", "no_ignore_case");
GetOptions(
    "quiet|q" => \$quiet,
    "extract-version|V" => \$extract_version,
);

my $cwd = getcwd();
my $dist = this_dist($cwd, $extract_version);

if (defined $dist) {
    print $dist, "\n";
} else {
    if ($quiet) {
    } else {
        warn "this-dist: No perl distribution name can be associated with current directory '$cwd'\n";
    }
    exit 1;
}

# ABSTRACT: Return name of Perl distribution associated with the current directory
# PODNAME:

=head1 SYNOPSIS

 % pwd
 /home/budi/perl-Foo-Bar

 % this-dist
 Foo-Bar

 # See how distribution is guessed
 % DEBUG=1 this-dist
 this-dist: Guessed dist=App-PPIUtils from dist.ini
 Foo-Bar

 # Will exit with code 1 and print error message to stderr when dist cannot be guessed
 % cd /
 % this-dist
 this-dist: No perl distribution name can be associated with current directory '/'

 # Don't show error message when guessing is failed (just exit with code 1)
 % this-dist -q
 % _

Some recipes:

 # Show metacpan distribution page in browser (requires L<lcpan> from L<App::lcpan>)
 % lcpan metacpan-dist `this-dist`


=head1 DESCRIPTION

This script tries these methods when guessing Perl distribution name associated
with current directory:

=over

=item * Name in F<dist.ini> (L<Dist::Zilla> configuration file), if the file is available

=item * L<CPAN::Info::FromURL> against URLs in F<.git/config> (git repository configuration file), if the file is available

=item * L<CPAN::Dist::FromRepoName> against current directory name

=back


=head1 FAQ

=head2 Where is this-mod?

For now you can use L<dist2mod>:

 % this-dist | dist2mod
