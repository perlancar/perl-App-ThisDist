#!perl

use 5.010001;
use strict;
use warnings;
use Log::ger::Screen;

use App::ThisDist 'this_dist';
use Cwd;
use Getopt::Long;

# AUTHORITY
# DATE
# DIST
# VERSION

my ($quiet, $extract_version);
Getopt::Long::Configure("bundling", "no_ignore_case");
GetOptions(
    "quiet|q" => \$quiet,
    "extract-version|V" => \$extract_version,
);

my $cwd = getcwd();
my $dist = this_dist($cwd, $extract_version);

if (defined $dist) {
    print $dist, "\n";
} else {
    if ($quiet) {
    } else {
        warn "this-dist: No perl distribution name can be associated with current directory '$cwd'\n";
    }
    exit 1;
}

# ABSTRACT: Return name of Perl distribution associated with the current directory
# PODNAME:

=head1 SYNOPSIS

 % pwd
 /home/budi/perl-Foo-Bar

 % this-dist
 Foo-Bar

 # See how distribution is guessed
 % DEBUG=1 this-dist
 this-dist: Guessed dist=App-PPIUtils from dist.ini
 Foo-Bar

 # Will exit with code 1 and print error message to stderr when dist cannot be guessed
 % cd /
 % this-dist
 this-dist: No perl distribution name can be associated with current directory '/'

 # Don't show error message when guessing is failed (just exit with code 1)
 % this-dist -q
 % _

 # Also try to extract version
 % this-dist -V
 Foo-Bar 1.23

Some other examples:

 # Show MetaCPAN distribution page in browser (but see this-dist-on-metacpan script)
 % firefox metacpan.org/release/`this-dist`


=head1 DESCRIPTION

This script tries these methods when guessing Perl distribution name associated
with current directory:

=over

=item * Distribution metadata {MYMETA,META}.{json,yml}

=item * Makefile.PL, Makefile, Build.PL

=item * Name in F<dist.ini> (L<Dist::Zilla> configuration file), if the file is available

=back

If it cannot find an associated Perl
distribution name, it will print an error message to stderr (unless being told
to be quiet via C<--quiet>) and exit with non-zero status.


=head1 OPTIONS

=head2 --quiet, -q

=head2 --extract-version, -V


=head1 SEE ALSO

L<this-mod>

L<this-dist-on-metacpan>

Some scripts like L<pmman> and L<pmpath> (from L<App::PMUtils>) or
L<list-dist-contents> and L<dist-has-deb> (from L<App::DistUtils>) already
default to "current module" or "current distribution" so instead of saying:

 % dist-has-deb `this-dist`

you can just say:

 % dist-has-deb
